<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.yangwz.sparrowflow">

    <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE"/>

    <!-- 权限声明 -->
    <!-- 访问网络状态-->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>

    <!-- 外置存储存取权限 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

    <!-- 多媒体相关 -->
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
    <!-- Android11：V8.6.1及之后的版本不需要；其他：V4.4.0及之后的版本不需要 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>

    <!-- 控制呼吸灯，振动器等，用于新消息提醒 -->
    <uses-permission android:name="android.permission.FLASHLIGHT" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <!-- 8.0+系统需要-->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!-- 下面的 uses-permission 一起加入到你的 AndroidManifest 文件中。 -->
    <permission
        android:name="com.yangwz.sparrowflow.permission.RECEIVE_MSG"
        android:protectionLevel="signature"/>

    <uses-permission android:name="com.yangwz.sparrowflow.permission.RECEIVE_MSG"/>
    <application
        android:name=".app.MyApp"
        android:allowBackup="false"
        android:icon="@mipmap/sparrow"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/sparrow"
        android:supportsRtl="true"
        android:theme="@style/Theme.SparrowFlow"
        tools:replace="android:allowBackup">
        <activity
            android:name=".activity.SplashActivity"
            android:theme="@style/SplashActivityTheme"
            android:exported="true">

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".activity.VideoCompressionActivity" />
        <activity android:name=".activity.MainActivity" />
        <activity android:name=".activity.VideoPlayActivity" />
        <activity android:name=".activity.BitmapFactoryActivity" />
        <activity android:name=".cover.SelCoverTimeActivity" />
        <activity android:name=".activity.TextBitmapActivity" />
        <activity android:name=".activity.WaterMarkActivity" />
        <activity android:name=".kotlinlearn.SimpleKotlinActivity" />
        <activity android:name=".kotlinlearn.SimpleSuspendActivity" />
        <activity android:name=".activity.NimChatActivity" />

        <!--        //别忘了换成你自己的包名,另外这个字符串就是EasyPhotos.setFileProviderAuthoritiesText()的参数-->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.yangwz.sparrowflow.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths_public" />
        </provider>




        <!-- APP key, 可以在这里设置，也可以在 SDKOptions 中提供。
           如果 SDKOptions 中提供了，则取 SDKOptions 中的值。 -->
        <meta-data
            android:name="com.netease.nim.appKey"
            android:value="ae0e4e58993154d0affeb8ad5157945e" />
        <!-- 云信后台服务，请使用独立进程。 -->
        <service
            android:name="com.netease.nimlib.service.NimService"
            android:process=":core"/>

        <!-- 云信后台辅助服务 -->
        <service
            android:name="com.netease.nimlib.service.NimService$Aux"
            android:process=":core"/>

        <!-- 云信后台辅助服务 -->
        <service
            android:name="com.netease.nimlib.job.NIMJobService"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":core"/>

        <!-- 云信监视系统启动和网络变化的广播接收器，保持和 NimService 同一进程 -->
        <receiver android:name="com.netease.nimlib.service.NimReceiver"
            android:process=":core"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
            </intent-filter>
        </receiver>

        <!-- 云信进程间通信 Receiver -->
        <receiver android:name="com.netease.nimlib.service.ResponseReceiver"/>

        <!-- 云信进程间通信service -->
        <service android:name="com.netease.nimlib.service.ResponseService"/>

        <!-- 云信进程间通信provider -->
        <provider
            android:name="com.netease.nimlib.ipc.NIMContentProvider"
            android:authorities="com.yangwz.sparrowflow.ipc.provider"
            android:exported="false"
            android:process=":core" />

        <!-- 云信内部使用的进程间通信provider -->
        <!-- SDK启动时会强制检测该组件的声明是否配置正确，如果检测到该声明不正确，SDK会主动抛出异常引发崩溃 -->
        <provider
            android:name="com.netease.nimlib.ipc.cp.provider.PreferenceContentProvider"
            android:authorities="com.yangwz.sparrowflow.ipc.provider.preference"
            tools:replace="android:authorities"
            android:exported="false" />

    </application>

</manifest>